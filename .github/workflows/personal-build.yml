---
# Github Actions release for audiobookshelf
# -*- compile-command: "yamllint -f parsable personal-build.yml" -*-

name: Build and Push Personal Docker Image

# Trigger the workflow on push or pull request
on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  # Allows you to run workflow manually from Actions tab
  workflow_dispatch:
    inputs:
      manual:
        default: true
        required: true

jobs:
  build:
    if: ${{ ! contains(github.event.head_commit.message, 'skip ci') && github.event_name != 'pull_request' }}
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lowercase github.repository
        run: |
          echo "IMAGE_NAME=`echo ${{github.repository}} | tr '[:upper:]' '[:lower:]'`" >>${GITHUB_ENV}

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
        with:
          images: |
            ghcr.io/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.title=audiobookshelf
            org.opencontainers.image.url=https://github.com/darthShadow/audiobookshelf/pkgs/container/audiobookshelf
            org.opencontainers.image.description=Self-hosted audiobook and podcast server
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            org.opencontainers.image.licenses=GPL-3.0
            org.opencontainers.image.authors=advplyr <https://github.com/advplyr>
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          tags: |
            type=sha
            type=semver,pattern={{version}}
            type=edge,branch=local-main

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Image
        uses: docker/build-push-action@v5
        with:
          tags: ${{ github.event.inputs.tags || steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false
          cache-from: type=registry,ref=ghcr.io/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ env.IMAGE_NAME }}:buildcache,mode=max,compression=zstd
